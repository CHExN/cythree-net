<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.mrbird.febs.chaoyang3team.dao.StaffOutsideMapper">

    <select id="findStaffOutsideDetail" resultType="cc.mrbird.febs.chaoyang3team.domain.StaffOutside">
        SELECT
        cso.STAFF_ID,
        cso.SORT_NUM_1,
        cso.SORT_NUM_2,
        cso.TYPE,
        cso.CAUSE,
        cso.TEMPORARY,
        cso.TEAM,
        cso.`NAME`,
        cso.GENDER,
        cso.CLAN,
        cso.BIRTHPLACE,
        cso.CULTURE,
        cso.HOUSEHOLD_REGISTRATION_TYPE,
        cso.POLITICAL_FACE,
        cso.ID_NUM,
        cso.ADDRESS,
        cso.PHONE_LAND_LINE,
        cso.PHONE_CELL,
        cso.BIRTH_DATE,
        cso.ADD_DATE,
        cso.TRANSFER_DATE,
        -- cso.TO_TEAM_DATE,
        cso.POST,
        cso.TECHNICAL_TYPE,
        cso.REMARK,
        cso.IS_LEAVE,
        cso.LEAVE_DATE
        FROM cy_staff_outside AS cso
        WHERE FIND_IN_SET(cso.IS_LEAVE, #{staffOutside.isLeave})
        <choose>
            <when test="staffOutside.deleted !=null and staffOutside.deleted != ''">
                AND cso.DELETED = #{staffOutside.deleted}
            </when>
            <otherwise>
                AND cso.DELETED=0
            </otherwise>
        </choose>
        <if test="staffOutside.type != null and staffOutside.type != ''">
            AND FIND_IN_SET(cso.TYPE, #{staffOutside.type})
        </if>
        <if test="staffOutside.team != null and staffOutside.team != ''">
            AND FIND_IN_SET(cso.TEAM, #{staffOutside.team})
        </if>
        <if test="staffOutside.name != null and staffOutside.name != ''">
            AND cso.NAME LIKE CONCAT('%',#{staffOutside.name},'%')
        </if>
        <if test="staffOutside.cause != null and staffOutside.cause != ''">
            AND cso.CAUSE LIKE CONCAT('%',#{staffOutside.cause},'%')
        </if>
        <if test="staffOutside.gender != null and staffOutside.gender != ''">
            AND cso.GENDER = #{staffOutside.gender}
        </if>
        <if test="staffOutside.clan != null and staffOutside.clan != ''">
            AND cso.CLAN = #{staffOutside.clan}
        </if>
        <if test="staffOutside.birthplace != null and staffOutside.birthplace != ''">
            AND cso.BIRTHPLACE = #{staffOutside.birthplace}
        </if>
        <if test="staffOutside.culture != null and staffOutside.culture != ''">
            AND cso.CULTURE = #{staffOutside.culture}
        </if>
        <if test="staffOutside.politicalFace != null and staffOutside.politicalFace != ''">
            AND cso.POLITICAL_FACE = #{staffOutside.politicalFace}
        </if>
        <if test="staffOutside.idNum != null and staffOutside.idNum != ''">
            AND cso.ID_NUM LIKE CONCAT('%',#{staffOutside.idNum},'%')
        </if>
        <if test="staffOutside.address != null and staffOutside.address != ''">
            AND cso.ADDRESS LIKE CONCAT('%',#{staffOutside.address},'%')
        </if>
        <if test="staffOutside.phoneLandLine != null and staffOutside.phoneLandLine != ''">
            AND cso.PHONE_LAND_LINE LIKE CONCAT('%',#{staffOutside.phoneLandLine},'%')
        </if>
        <if test="staffOutside.phoneCell != null and staffOutside.phoneCell != ''">
            AND cso.PHONE_CELL LIKE CONCAT('%',#{staffOutside.phoneCell},'%')
        </if>
        <if test="staffOutside.householdRegistrationType != null and staffOutside.householdRegistrationType != ''">
            AND FIND_IN_SET(cso.HOUSEHOLD_REGISTRATION_TYPE, #{staffOutside.householdRegistrationType})
        </if>
        <if test="staffOutside.post != null and staffOutside.post != ''">
            AND cso.POST = #{staffOutside.post}
        </if>
        <if test="staffOutside.technicalType != null and staffOutside.technicalType != ''">
            AND FIND_IN_SET(cso.TECHNICAL_TYPE, #{staffOutside.technicalType})
        </if>
        <if test="staffOutside.remark != null and staffOutside.remark != ''">
            AND cso.REMARK LIKE CONCAT('%',#{staffOutside.remark},'%')
        </if>
        <if test="staffOutside.mini != null and staffOutside.mini != ''">
            AND cso.BIRTH_DATE &lt;= DATE_SUB(CURDATE(),INTERVAL #{staffOutside.mini} YEAR)
        </if>
        <if test="staffOutside.max != null and staffOutside.max != ''">
            AND cso.BIRTH_DATE &gt;= DATE_SUB(CURDATE(),INTERVAL #{staffOutside.max} YEAR)
        </if>
        <if test="staffOutside.createTimeFrom != null and staffOutside.createTimeFrom !=''
        and staffOutside.createTimeTo!= null and staffOutside.createTimeTo !=''">
            AND cso.ADD_DATE &gt;= #{staffOutside.createTimeFrom}
            AND cso.ADD_DATE &lt;= #{staffOutside.createTimeTo}
        </if>
        <if test="staffOutside.reduceTimeFrom != null and staffOutside.reduceTimeFrom !=''
        and staffOutside.reduceTimeTo!= null and staffOutside.reduceTimeTo !=''">
            AND cso.LEAVE_DATE &gt;= #{staffOutside.reduceTimeFrom}
            AND cso.LEAVE_DATE &lt;= #{staffOutside.reduceTimeTo}
        </if>
        ORDER BY IS_LEAVE ASC, SORT_NUM_1 ASC, SORT_NUM_2 ASC
    </select>

    <select id="findStaffOutsideSimplify" resultType="cc.mrbird.febs.chaoyang3team.domain.StaffOutside">
        SELECT
        cso.STAFF_ID,
        cso.`NAME`,
        cso.GENDER,
        cso.ID_NUM
        FROM cy_staff_outside AS cso
        WHERE cso.DELETED=0 AND FIND_IN_SET(cso.IS_LEAVE, #{staffOutside.isLeave})
        <if test="staffOutside.temporary != null and staffOutside.temporary != ''">
            AND (SELECT COUNT(1) FROM cy_contract_outside AS cco WHERE cco.ID_NUM=cso.ID_NUM) = 0
        </if>
        <if test="staffOutside.post != null and staffOutside.post != ''">
            AND (SELECT COUNT(1) FROM cy_insurance_outside AS cio WHERE cio.STAFF_ID=cso.STAFF_ID) = 0
        </if>
        <if test="staffOutside.clan != null and staffOutside.clan != ''">
            AND (cso.TECHNICAL_TYPE='保洁员')=0
        </if>
        <if test="staffOutside.idNum != null and staffOutside.idNum != ''">
            AND cso.ID_NUM LIKE CONCAT('%',#{staffOutside.idNum},'%')
        </if>
        <if test="staffOutside.name != null and staffOutside.name != ''">
            AND cso.NAME LIKE CONCAT('%',#{staffOutside.name},'%')
        </if>
        <if test="staffOutside.team != null and staffOutside.team != ''">
            AND FIND_IN_SET(cso.TEAM, #{staffOutside.team})
        </if>
        <if test="staffOutside.technicalType != null and staffOutside.technicalType != ''">
            AND FIND_IN_SET(cso.TECHNICAL_TYPE, #{staffOutside.technicalType})
        </if>
        ORDER BY IS_LEAVE ASC, SORT_NUM_1 ASC, SORT_NUM_2 ASC
    </select>

    <select id="getStaffOutsideByStaffId" resultType="cc.mrbird.febs.chaoyang3team.domain.StaffOutside">
        SELECT
        cso.STAFF_ID,
        cso.SORT_NUM_1,
        cso.SORT_NUM_2,
        cso.TYPE,
        cso.CAUSE,
        cso.TEMPORARY,
        cso.TEAM,
        cso.`NAME`,
        cso.GENDER,
        cso.CLAN,
        cso.BIRTHPLACE,
        cso.CULTURE,
        cso.HOUSEHOLD_REGISTRATION_TYPE,
        cso.POLITICAL_FACE,
        cso.ID_NUM,
        cso.ADDRESS,
        cso.PHONE_LAND_LINE,
        cso.PHONE_CELL,
        cso.BIRTH_DATE,
        cso.ADD_DATE,
        cso.TRANSFER_DATE,
--         cso.TO_TEAM_DATE,
        cso.POST,
        cso.TECHNICAL_TYPE,
        cso.REMARK,
        cso.IS_LEAVE,
        cso.LEAVE_DATE
        FROM cy_staff_outside AS cso
        WHERE cso.STAFF_ID=#{staffId}
    </select>

    <select id="getStaffOutsideByIdNum" resultType="cc.mrbird.febs.chaoyang3team.domain.StaffOutside">
        SELECT
        cso.STAFF_ID,
        cso.SORT_NUM_1,
        cso.SORT_NUM_2,
        cso.TYPE,
        cso.CAUSE,
        cso.TEMPORARY,
        cso.TEAM,
        cso.`NAME`,
        cso.GENDER,
        cso.CLAN,
        cso.BIRTHPLACE,
        cso.CULTURE,
        cso.HOUSEHOLD_REGISTRATION_TYPE,
        cso.POLITICAL_FACE,
        cso.ID_NUM,
        cso.ADDRESS,
        cso.PHONE_LAND_LINE,
        cso.PHONE_CELL,
        cso.BIRTH_DATE,
        cso.ADD_DATE,
        cso.TRANSFER_DATE,
--         cso.TO_TEAM_DATE,
        cso.POST,
        cso.TECHNICAL_TYPE,
        cso.REMARK,
        cso.IS_LEAVE,
        cso.LEAVE_DATE
        FROM cy_staff_outside AS cso
        WHERE cso.ID_NUM=#{idNum} AND cso.DELETED=0 LIMIT 1
    </select>

    <select id="getContractOutsideIds" resultType="java.lang.String">
        SELECT cco.ID FROM cy_contract_outside AS cco
        LEFT JOIN cy_staff_outside AS cso ON(cso.ID_NUM=cco.ID_NUM)
        WHERE FIND_IN_SET(cso.STAFF_ID, #{staffOutsideIdsStr})
    </select>

    <select id="getTechnicalType" resultType="java.lang.String">
        SELECT TECHNICAL_TYPE FROM cy_staff_outside GROUP BY TECHNICAL_TYPE
    </select>

    <select id="getPost" resultType="java.lang.String">
        SELECT POST FROM cy_staff_outside GROUP BY POST
    </select>

    <select id="getTeam" resultType="java.lang.String">
        SELECT TEAM FROM cy_staff_outside GROUP BY TEAM
    </select>

    <select id="getStaffIdByIdNum" resultType="cc.mrbird.febs.chaoyang3team.domain.StaffOutside">
        SELECT STAFF_ID,`NAME` FROM cy_staff_outside WHERE ID_NUM = #{idNum} LIMIT 1
    </select>

    <select id="getStaffOutsideTypeCount" resultType="java.util.Map">
        SELECT
        SUM(if(cso.TYPE = 0,1,0)) AS '0',
        SUM(if(cso.TYPE = 1,1,0)) AS '1',
        SUM(if(cso.TYPE = 2,1,0)) AS '2',
        SUM(if(cso.TYPE = 3,1,0)) AS '3'
        FROM cy_staff_outside AS cso WHERE cso.DELETED=0 AND cso.IS_LEAVE=#{isLeave}
    </select>

    <update id="updateStaffOutsideSwapSort">
        UPDATE cy_staff_outside AS c1
        JOIN cy_staff_outside AS c2 ON (c1.SORT_NUM_1=#{sortNum1} AND c1.SORT_NUM_2=#{sortNum2} AND c2.SORT_NUM_1=#{beSortNum1} AND c2.SORT_NUM_2=#{beSortNum2})
        SET c1.SORT_NUM_1=c2.SORT_NUM_1,
            c1.SORT_NUM_2=c2.SORT_NUM_2,
            c2.SORT_NUM_1=c1.SORT_NUM_1,
            c2.SORT_NUM_2=c1.SORT_NUM_2
        WHERE c2.DELETED=0 AND c1.IS_LEAVE=#{isLeave} AND c2.DELETED=0 AND c2.IS_LEAVE=#{isLeave}
    </update>

    <update id="updateStaffOutsideSortNum1">
        UPDATE cy_staff_outside AS a INNER JOIN (
            SELECT cso.STAFF_ID, (@i:=@i+1) AS pm, IF(cso.MODIFY_TIME IS NULL, cso.CREATE_TIME, cso.MODIFY_TIME) AS datetime
            FROM cy_staff_outside AS cso, (select @i:=0) AS it
            WHERE cso.DELETED=0 AND cso.IS_LEAVE=0
            ORDER BY cso.TYPE ASC, cso.SORT_NUM_2 ASC, datetime DESC
        ) AS b ON a.STAFF_ID=b.STAFF_ID
        SET a.SORT_NUM_1=b.pm
    </update>

    <update id="updateStaffOutsideSortNum2">
        UPDATE cy_staff_outside AS a INNER JOIN (
            SELECT cso.STAFF_ID, (@i:=@i+1) AS pm, IF(cso.MODIFY_TIME IS NULL, cso.CREATE_TIME, cso.MODIFY_TIME) AS datetime
            FROM cy_staff_outside AS cso, (select @i:=0) AS it
            WHERE cso.DELETED=0 AND cso.IS_LEAVE=0 AND cso.TYPE=#{type}
            ORDER BY cso.TYPE ASC, cso.SORT_NUM_2 ASC, datetime DESC
        ) AS b ON a.STAFF_ID=b.STAFF_ID
        SET a.SORT_NUM_2=b.pm
    </update>

    <update id="updateStaffOutsideLeaveSortNum1">
        UPDATE cy_staff_outside AS a INNER JOIN (
            SELECT cso.STAFF_ID, (@i:=@i+1) AS pm, cso.LEAVE_DATE AS datetime
            FROM cy_staff_outside AS cso, (select @i:=0) AS it
            WHERE cso.DELETED=0 AND cso.IS_LEAVE=1
            ORDER BY cso.TYPE ASC, cso.SORT_NUM_2 ASC, datetime DESC
        ) AS b ON a.STAFF_ID=b.STAFF_ID
        SET a.SORT_NUM_1=b.pm
    </update>

    <update id="updateStaffOutsideLeaveSortNum2">
        UPDATE cy_staff_outside AS a INNER JOIN (
            SELECT cso.STAFF_ID, (@i:=@i+1) AS pm, cso.LEAVE_DATE AS datetime
            FROM cy_staff_outside AS cso, (select @i:=0) AS it
            WHERE cso.DELETED=0 AND cso.IS_LEAVE=1 AND cso.TYPE=#{type}
            ORDER BY cso.TYPE ASC, cso.SORT_NUM_2 ASC, datetime DESC
        ) AS b ON a.STAFF_ID=b.STAFF_ID
        SET a.SORT_NUM_2=b.pm
    </update>

    <select id="getIncreaseOrDecreaseStaffOutside" resultType="cc.mrbird.febs.chaoyang3team.domain.StaffOutside">
        SELECT
        cso.STAFF_ID,
        cso.`NAME`,
        cso.GENDER,
        cso.ID_NUM,
        cso.TECHNICAL_TYPE,
        '编外' AS type,
        <if test="staffOutside.isLeave == 0">
            cso.ADD_DATE AS leaveDate
        </if>
        <if test="staffOutside.isLeave == 1">
            cso.LEAVE_DATE AS leaveDate
        </if>
        FROM cy_staff_outside AS cso
        WHERE cso.DELETED=0 AND cso.IS_LEAVE=#{staffOutside.isLeave}
        <if test="staffOutside.isLeave == 0">
            AND cso.ADD_DATE &gt;= #{staffOutside.createTimeFrom}
            AND cso.ADD_DATE &lt;= #{staffOutside.createTimeTo}
        </if>
        <if test="staffOutside.isLeave == 1">
            AND cso.LEAVE_DATE &gt;= #{staffOutside.createTimeFrom}
            AND cso.LEAVE_DATE &lt;= #{staffOutside.createTimeTo}
        </if>
    </select>

    <delete id="deleteStaffOutsideTrue">
        DELETE FROM cy_staff_outside WHERE FIND_IN_SET(STAFF_ID, #{staffOutsideIdsStr})
    </delete>

    <update id="restoreStaffOutside">
        UPDATE cy_staff_outside SET DELETED=0 WHERE FIND_IN_SET(STAFF_ID, #{staffOutsideIds})
    </update>

</mapper>
